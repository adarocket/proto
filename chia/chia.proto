syntax = "proto3";

option go_package = "/proto-gen/chia";
package chia;

// package proto;

// import "github.com/adarocket/proto/model/common.proto";
// import "model/common.proto";
import "common/common.proto";

service Chia {
    rpc SaveStatistic(SaveStatisticRequest) returns (SaveStatisticResponse) {}
    rpc GetStatistic(GetStatisticRequest) returns (SaveStatisticRequest) {}
}

message SaveStatisticRequest {
    Common.NodeAuthData node_auth_data = 1;
    Statistic statistic = 2;
}

message Statistic {
    // every 3600 seconds
    // Common
    Common.NodeBasicData  node_basic_data = 1;
    Common.ServerBasicData server_basic_data = 2;
    Common.Updates updates = 3;
    Common.Security security = 4;

    // every 10 seconds
    // Common
    Common.Online online = 9;
    Common.MemoryState memory_state = 10;
    Common.CPUState cpu_state = 11;


    ChiaNodeFarming chia_node_farming = 14;
}

// Chia node farming -  node, rare (every 3600 seconds)
message ChiaNodeFarming {
    string farming_status = 1; // ++
    float total_chia_farmed = 2; // ++ изменения
    float user_transaction_fees = 3;
    float block_rewards = 4;

    uint64 last_height_farmed = 5;
    uint64 plot_count = 6; // ++ изменения

    uint64 total_size_of_plots = 7; // ++ изменения
    uint64 estimated_network_space = 8;

    string expected_time_to_win = 9;
}

message GetStatisticRequest {
    string uuid = 1;
}

message SaveStatisticResponse {
    string status = 1;
}
